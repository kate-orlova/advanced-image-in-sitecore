@using AdvancedImage.Extensions
@using HtmlHelperExtensions = AdvancedImage.Extensions.HtmlHelperExtensions
@model AdvancedImage.Fields.Editor.AdvancedImageEditorModel

<input id="@(Model.ControlId)_checkbox" type="checkbox">Show full image</input>
<div id="@(Model.ControlId)_pane" class="scContentControlImagePane">
    <div class="scContentControlImageImage" ondblclick="javascript:return scForm.postEvent(this,event,'@(Model.ControlId).Browse');" style="text-align: left;">
        <span style="display: inline-block; overflow: visible;" class="helper-tool-target">
            <img id="@(Model.ControlId)_image" src="@Model.Image.ImageSrc" id="@Model.Image.ImageId" class="helper-tool-img" />
            <img class="reticle" src="/sitecore modules/advancedimage/img/target-selector.png" style="display: none;" />
        </span>
    </div>
    <a href="#" id="@(Model.ControlId)_crop_btn" class="scContentButton" onclick="javascript:return scForm.postEvent(this, event, 'contentimage:crop(id=@(Model.ControlId))');" style="display: none;">CROP</a>
    <div id="@(Model.ControlId)_details" class="scContentControlImageDetails" data-ai-preview-container>
        @Html.Raw(HtmlHelperExtensions.GetRazorViewAsString("~/Views/Shared/Fields/AdvancedImageDetails.cshtml", Model.Details))

        @Html.Raw(HtmlHelperExtensions.GetRazorViewAsString("~/Views/Shared/Fields/AdvancedImageThumbnails.cshtml", Model.Thumbnails))
    </div>
    <div id="@(Model.ControlId)_focal_info" class="scContentControlImageDetails" style="display: none;">
        <div>
            <p>
                <label for="@(Model.ControlId)-data-attr">Crop and focus data- attributes:</label>
                <input class='helper-tool-data-attr' id="@(Model.ControlId)-data-attr" name="@(Model.ControlId)-data-attr" type='text' placeholder='data-focus-x="0" data-focus-y="0" '>
            </p>
            <p>
                <label for="@(Model.ControlId)-css3-val">Css3 background position:</label>
                <input class='helper-tool-css3-val' id="@(Model.ControlId)-css3-val" name="@(Model.ControlId)-css3-val" type='text' placeholder='background-position:'>
            </p>
        </div>
    </div>
    <input id="@(Model.ControlId)_crop" type="hidden" value="@(Model.Image.CropFocus)" />
    <link href="/sitecore modules/advancedimage/css/focuspoint.css" rel="stylesheet" />
    <link href="/sitecore modules/advancedimage/css/helper-tool.css" rel="stylesheet" />
    <script>
        jQuery(document).ready(function () {
            (function ($) {
                var s = document.createElement("script");
                s.type = "text/javascript";
                s.src = "/sitecore modules/advancedimage/js/jquery.focuspoint.js";
                $("head").append(s);

                if ("@(Model.IsDebug)" == "1") {
                    $("#@(Model.ControlId)_focal_info").show();
                }

                var $defaultSrc;
                var $dataAttrInput;
                var $cssAttrInput;
                var $focusPointContainers;
                var $focusPointImages;
                var $mainImage;

                var $control;
                var $previewContainer;
                var $previewItems;

                var $showFull;

                var focusPointAttr = {
                    x: 0,
                    y: 0,
                    w: 0,
                    h: 0
                };

                var currentState =
                {
                    cx: 0,
                    cy: 0,
                    fx: 0,
                    fy: 0,
                    sf: false,
                    w: 0,
                    h: 0
                };

                (function () {
                    $defaultSrc = "@(Model.Image.ImageSrc)";
                    $dataAttrInput = $("#@(Model.ControlId)-data-attr");
                    $cssAttrInput = $("#@(Model.ControlId)-css3-val");
                    $mainImage = $("#@(Model.ControlId)_image");
                    $focusPointContainers = $("#@(Model.ControlId)_frame .focuspoint");
                    $focusPointImages = $("#@(Model.ControlId)_frame .focuspoint img");
                    $showFull = $("#@(Model.ControlId)_checkbox");

                    $control = $('#@(Model.ControlId)_pane');
                    $previewContainer = $control.find('[data-ai-preview-container]');
                    $previewItems = $previewContainer.find("[data-ai-preview-item]");

                    setImage($defaultSrc);
                })();

                function setImage(imgURL) {
                    //Get the dimensions of the image by referencing an image stored in memory
                    $("<img/>")
                        .attr("src", imgURL)
                        .load(function () {
                            var retical = $("#@(Model.ControlId)_pane .reticle");
                            retical.show();

                            focusPointAttr.w = this.width;
                            focusPointAttr.h = this.height;

                            var cropTxt = $("#@(Model.ControlId)_crop");
                            if (cropTxt.val().length > 0) {
                                var arr = cropTxt.val().split(",");
                                if (arr.length == 5) {
                                    var cropx = arr[0].length == 0 ? 0 : parseFloat(arr[0]);
                                    var cropy = arr[1].length == 0 ? 0 : parseFloat(arr[1]);
                                    focusPointAttr.x = arr[2].length == 0 ? 0 : parseFloat(arr[2]);
                                    focusPointAttr.y = arr[3].length == 0 ? 0 : parseFloat(arr[3]);
                                    var showFull = arr[4].length == 0 ? false : arr[4] === "true";
                                    if (showFull) {
                                        $showFull.attr('checked', 'checked');
                                    } else {
                                        $showFull.removeAttr('checked');
                                    }
                                    if (cropx > 0 && cropy > 0) {
                                        retical.css({
                                            "top": (cropy * 100) + "%",
                                            "left": (cropx * 100) + "%"
                                        });
                                    }

                                    //Save current state
                                    currentState.cx = cropx;
                                    currentState.cy = cropy;
                                    currentState.fx = focusPointAttr.x;
                                    currentState.fy = focusPointAttr.y;
                                    currentState.sf = showFull;
                                    currentState.w = focusPointAttr.w;
                                    currentState.h = focusPointAttr.h;

                                    $dataAttrInput.val('data-crop-x="' + cropx + '" data-crop-y="' + cropy + '" data-focus-x="' + focusPointAttr.x + '" data-focus-y="' + focusPointAttr.y + '" data-focus-w="' + focusPointAttr.w + '" data-focus-h="' + focusPointAttr.h + '" data-show-full="' + showFull + '"');
                                    $cssAttrInput.val("background-position: " + (cropx * 100).toFixed(0) + "% " + (cropy * 100).toFixed(0) + "%;");
                                }
                            }

                            //Set src on the thumbnail used in the GUI
                            $mainImage.attr("src", imgURL);

                            //Set src on all .focuspoint images
                            $focusPointImages.attr("src", imgURL);

                            //Set up initial properties of .focuspoint containers

                            /*-----------------------------------------*/
                            // Note ---
                            // Setting these up with attr doesn"t really make a difference
                            // added to demo only so changes are made visually in the dom
                            // for users inspecting it. Because of how FocusPoint uses .data()
                            // only the .data() assignments that follow are necessary.
                            /*-----------------------------------------*/
                            $previewItems.attr({
                                "data-focus-x": focusPointAttr.x,
                                "data-focus-y": focusPointAttr.y,
                                "data-image-w": focusPointAttr.w,
                                "data-image-h": focusPointAttr.h
                            });

                            /*-----------------------------------------*/
                            // These assignments using .data() are what counts.
                            /*-----------------------------------------*/
                            $previewItems.data("focusX", focusPointAttr.x);
                            $previewItems.data("focusY", focusPointAttr.y);
                            $previewItems.data("imageW", focusPointAttr.w);
                            $previewItems.data("imageH", focusPointAttr.h);

                            //Run FocusPoint for the first time.
                            $(".focuspoint").focusPoint();
                        });
                }

                $showFull.change(function (e) {

                    currentState.sf = $showFull.is(":checked");
                    //Write values to input
                    $dataAttrInput.val('data-crop-x="' + currentState.cx + '" data-crop-y="' + currentState.cy + '" data-focus-x="' + currentState.fx + '" data-focus-y="' + currentState.fy + '" data-focus-w="' + currentState.w + '" data-focus-h="' + currentState.h + '" data-show-full="' + currentState.sf + '"');
                    var btn = $("#@(Model.ControlId)_crop_btn");
                    btn.attr("onclick", "javascript:return scForm.postEvent(this, event, 'contentimage:crop(id=@(Model.ControlId),cx=" + currentState.cx + ",cy=" + currentState.cy + ",fx=" + currentState.fx + ",fy=" + currentState.fy + ",sf=" + currentState.sf + ")')");
                    btn.trigger("click");
                });

                $mainImage.click(function (e) {
                    $previewItems = $previewContainer.find("[data-ai-preview-item]");

                    var imageW = $(this).width();
                    var imageH = $(this).height();

                    //Calculate FocusPoint coordinates
                    var offsetX = e.pageX - $(this).offset().left;
                    var offsetY = e.pageY - $(this).offset().top;
                    var cropX = (offsetX / imageW);
                    var cropY = (offsetY / imageH);
                    var focusX = (offsetX / imageW - .5) * 2;
                    var focusY = (offsetY / imageH - .5) * -2;

                    focusPointAttr.x = focusX;
                    focusPointAttr.y = focusY;

                    //Write values to input
                    $dataAttrInput.val('data-crop-x="' + cropX.toFixed(2) + '" data-crop-y="' + cropY.toFixed(2) + '" data-focus-x="' + focusPointAttr.x + '" data-focus-y="' + focusPointAttr.y + '" data-focus-w="' + focusPointAttr.w + '" data-focus-h="' + focusPointAttr.h + '" data-show-full="' + $showFull.is(":checked") + '"');

                    //Update focus point
                    updateFocusPoint();

                    //Calculate CSS Percentages
                    var percentageX = (offsetX / imageW) * 100;
                    var percentageY = (offsetY / imageH) * 100;
                    var backgroundPosition = percentageX.toFixed(0) + "% " + percentageY.toFixed(0) + "%";
                    var backgroundPositionCSS = "background-position: " + backgroundPosition + ";";
                    $cssAttrInput.val(backgroundPositionCSS);

                    //Leave a sweet target reticle at the focus point.
                    $("#@(Model.ControlId)_pane .reticle")
                        .show()
                        .css({
                            "top": percentageY + "%",
                            "left": percentageX + "%"
                        });

                    //Save current state
                    currentState.cx = cropX.toFixed(2);
                    currentState.cy = cropY.toFixed(2);
                    currentState.fx = focusPointAttr.x;
                    currentState.fy = focusPointAttr.y;
                    currentState.sf = $showFull.is(":checked");
                    currentState.w = $(this).width();
                    currentState.h = $(this).height();

                    var btn = $("#@(Model.ControlId)_crop_btn");
                    btn.attr("onclick", "javascript:return scForm.postEvent(this, event, 'contentimage:crop(id=@(Model.ControlId),cx=" + currentState.cx + ",cy=" + currentState.cy + ",fx=" + currentState.fx + ",fy=" + currentState.fy + ",sf=" + currentState.sf + ")')");
                    btn.trigger("click");
                });

                function updateFocusPoint() {
                    /*-----------------------------------------*/
                    // See note in setImage() function regarding these attribute assignments.
                    //TLDR - You don't need them for this to work.
                    /*-----------------------------------------*/
                    $previewItems.attr({
                        "data-focus-x": focusPointAttr.x,
                        "data-focus-y": focusPointAttr.y
                    });
                    /*-----------------------------------------*/
                    // These you DO need :)
                    /*-----------------------------------------*/
                    $previewItems.data("focusX", focusPointAttr.x);
                    $previewItems.data("focusY", focusPointAttr.y);
                    $previewItems.adjustFocus();
                };
            }(jQuery));
        });
    </script>
</div>

